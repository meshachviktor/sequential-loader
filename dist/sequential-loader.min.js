/**
 * SequentialLoader v1.0.0
 * Author: Gbemileke Adeleke (https://github.com/meshachviktor)
 * License: MIT
 */
!function(){"use strict";function t(t,e){if(""===t||void 0===t)throw new Error("URL cannot be empty!");if(!t.endsWith(".json"))throw new Error("Resources file path must point to a json document!");this._debug=e,this.url=t,this.stylesheets=null,this.fonts=null,this.scripts=null,this.stylesheetsLength=null,this.fontsLength=null,this.scriptsLength=null,this.batchOrder=null,this.nextBatch=0,this.nextStylesheet=0,this.nextFont=0,this.nextScript=0,this.allStylesheetLoaded=!1,this.allFontsLoaded=!1,this.allScriptsLoaded=!1,this.allResourcesInitialisedEvent=new Event("sl.allresourcesinitialised"),this.fontsLoadedEvent=new Event("sl.fontsloaded"),this.stylesheetsLoadedEvent=new Event("sl.stylesheetsloaded"),this.scriptsLoadedEvent=new Event("sl.scriptsloaded"),this.allResourcesLoadedEvent=new Event("sl.allresourcesloaded")}t.prototype.toString=function(){return"SequentialLoader"},t.prototype.isArray=function(t){return!!Array.isArray(t)},t.prototype.isEmptyArray=function(t){return 0===t.length},t.prototype.isObject=function(t){return t instanceof Object&&!Array.isArray(t)},t.prototype.isEmptyObject=function(t){return 0===Object.keys(t).length},t.prototype.isJSONString=function(t){try{return JSON.parse(t),!0}catch(t){return!1}},t.prototype.loadStylesheet=function(t){var e=document.createElement("link"),s=Object.keys(t);e.rel="stylesheet";for(let n of s)e[n]=t[n];e.onload=this.loadNextStylesheet.bind(this),document.head.append(e)},t.prototype.loadNextStylesheet=function(){if(!(this.nextStylesheet<this.stylesheetsLength))return this.allStylesheetLoaded=!0,void document.dispatchEvent(this.stylesheetsLoadedEvent);this.loadStylesheet(this.stylesheets[this.nextStylesheet]),this.nextStylesheet++},t.prototype.loadFont=function(t){let e=null;(e=void 0===t.descriptors?new FontFace(t.family,t.source):new FontFace(t.family,t.source,t.descriptors)).load().then(function(){document.fonts.add(e),this.nextFont++,this.loadNextFont()}.bind(this)).catch(function(e){throw new Error(`Could not load font from source: ${t.source}`)})},t.prototype.loadNextFont=function(){this.nextFont<this.fontsLength?this.loadFont(this.fonts[this.nextFont]):(this.allFontsLoaded=!0,document.dispatchEvent(this.fontsLoadedEvent))},t.prototype.loadScript=function(t){var e=document.createElement("script"),s=Object.keys(t);for(let n of s)e[n]=t[n];e.onload=this.loadNextScript.bind(this),document.head.append(e)},t.prototype.loadNextScript=function(){if(!(this.nextScript<this.scriptsLength))return this.allScriptsLoaded=!0,void document.dispatchEvent(this.scriptsLoadedEvent);this.loadScript(this.scripts[this.nextScript]),this.nextScript++},t.prototype.initSylesheetLoading=function(t){if(!this.isArray(t))throw new Error("Stylesheets must be an array!");if(this.isEmptyArray(t))throw new Error("Stylesheets array cannot be empty!");this.stylesheetsLength=t.length,this.stylesheets=t},t.prototype.initScriptLoading=function(t){if(!this.isArray(t))throw new Error("Scripts must be an array!");if(this.isEmptyArray(t))throw new Error("scripts array cannot be empty!");this.scriptsLength=t.length,this.scripts=t},t.prototype.initFontLoading=function(t){if(!this.isArray(t))throw new Error("Fonts must be an array!");if(this.isEmptyArray(t))throw new Error("Fonts array cannot be empty!");this.fontsLength=t.length;for(let e=0;e<this.fontsLength;e++)if(!this.isObject(t[e]))throw new Error("Invalid font object!");this.fonts=t},t.prototype.processBatch=function(){if(this.nextBatch<this.batchOrder.length){if("fonts"===this.batchOrder[this.nextBatch])this.loadNextFont(this.fonts);else if("stylesheets"===this.batchOrder[this.nextBatch])this.loadNextStylesheet(this.stylesheets);else{if("scripts"!==this.batchOrder[this.nextBatch])throw new Error(`Invalid resource type '${item}'`);this.loadNextScript(this.scripts)}this.nextBatch++}else document.dispatchEvent(this.allResourcesLoadedEvent)},t.prototype.initEventHandlers=function(){document.addEventListener(this.allResourcesInitialisedEvent.type,this.processBatch.bind(this)),document.addEventListener(this.fontsLoadedEvent.type,this.processBatch.bind(this)),document.addEventListener(this.stylesheetsLoadedEvent.type,this.processBatch.bind(this)),document.addEventListener(this.scriptsLoadedEvent.type,this.processBatch.bind(this)),this._debug&&(document.addEventListener(this.allResourcesLoadedEvent.type,function(){console.log("Sequential loading of all application resources completed.")}),document.addEventListener(this.fontsLoadedEvent.type,function(){console.log("Finished loading all fonts.")}),document.addEventListener(this.stylesheetsLoadedEvent.type,function(){console.log("Finished loading all stylesheets.")}),document.addEventListener(this.scriptsLoadedEvent.type,function(){console.log("Finished loading all scripts.")}))},t.prototype.initLoading=function(){if(""===this.url||void 0===this.url)throw new Error("URL cannot be empty!");if(!this.url.endsWith(".json"))throw new Error("Resources file path must point to a json document!");this.initEventHandlers(),fetch(this.url).then(function(t){if(t.ok)return t.text();throw new Error("Could not load resources file.")}).then(function(t){if(!this.isJSONString(t))throw new Error("Content of resources file does not contain a valid json string.");var e=JSON.parse(t);if(void 0===e.order){var s=Object.keys(e);this.batchOrder=s}else this.batchOrder=e.order;this.batchOrder.forEach(function(t){if("fonts"===t)this.initFontLoading(e.fonts);else if("stylesheets"===t)this.initSylesheetLoading(e.stylesheets);else{if("scripts"!==t)throw new Error(`Invalid resource type '${t}'`);this.initScriptLoading(e.scripts)}}.bind(this)),document.dispatchEvent(this.allResourcesInitialisedEvent)}.bind(this))},window.sequentialLoader=new t(document.currentScript.dataset.slResources,"true"===document.currentScript.dataset.slDebug),window.sequentialLoader.initLoading()}();